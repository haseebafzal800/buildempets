{% comment %}
	GEMPAGE BUILDER (https://apps.shopify.com/gempage)

	You SHOULD NOT modify source code in this page because
	It is automatically generated from GEMPAGE BUILDER
	Try to edit page with the live editor.
{% endcomment %}
<!doctype html>
<html class="no-js supports-no-cookies" lang="{{ request.locale.iso_code }}">
<head>
  
{% render 'pagefly-head' %}
  <!-- Boost 3.1.2 -->
  {% render 'head-tag' %}

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-WX6358F');</script>
<!-- End Google Tag Manager -->
{% include 'dataLayer-allPages' %}

  <!-- Global site tag (gtag.js) - Google Ads: AW-10948865646 -->
<script async data-src="https://www.googletagmanager.com/gtag/js?id=AW-10948865646"></script>
<script type="text/lazyload">
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'AW-10948865646');
</script>

  
  {% capture seo_title %}
    {{ page_title }}
    {% if current_tags %}
      {%- assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}
    {% endif %}
    {% if current_page != 1 %}
      &ndash; {{ 'general.meta.page' | t: page: current_page }}
    {% endif %}
    {% unless page_title contains shop.name %}
      &ndash; {{ shop.name }}
    {% endunless %}
  {% endcapture %}
  <title>{{ seo_title }}</title>

  {% render 'social-meta-tags' %}

  {% render 'hs-defer-css' with filename: 'styles.css', pages: 'collection,index,product' | split: ',', minify: true, local: true %}

  <script>
    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    window.theme = window.theme || {};
    window.slate = window.slate || {};
    theme.moneyFormatWithCodeForProductsPreference = {% if settings.product_currency_code_enabled %}{{ shop.money_with_currency_format | json }}{% else %}{{ shop.money_format | json }}{% endif %};
    theme.moneyFormatWithCodeForCartPreference = {% if settings.cart_currency_code_enabled %}{{ shop.money_with_currency_format | json }}{% else %}{{ shop.money_format | json }}{% endif %};
    theme.moneyFormat = {{ shop.money_format | json }};
    theme.strings = {
      addToCart: {{ 'products.product.add_to_cart' | t | json }},
      unavailable: {{ 'products.product.unavailable' | t | json }},
      addressError: {{ 'map.errors.address_error' | t | json }},
      addressNoResults: {{ 'map.errors.address_no_results' | t | json }},
      addressQueryLimit: {{ 'map.errors.address_query_limit_html' | t | json }},
      authError: {{ 'map.errors.auth_error' | t | json }},
      addingToCart: {{ 'products.product.adding_to_cart' | t | json }},
      addedToCart: {{ 'products.product.added' | t | json }},
      addedToCartPopupTitle: {{ 'layout.cart.added_title' | t | json }},
      addedToCartPopupItems: {{ 'layout.cart.items' | t | json }},
      addedToCartPopupSubtotal: {{ 'layout.cart.subtotal' | t | json }},
      addedToCartPopupGoToCart: {{ 'layout.cart.go_to_cart' | t | json }},
      cartTermsNotChecked: {{ 'cart.terms.confirmation' | t | json }},
      searchLoading: {{ 'layout.header.search_loading' | t | json }},
      searchMoreResults: {{ 'layout.header.search_more_results' | t | json }},
      searchNoResults: {{ 'layout.header.search_no_results' | t | json }},
      priceFrom: {{ 'products.product.from_text' | t | json }},
      quantityTooHigh: {{ 'cart.general.quantity_too_high' | t: quantity: '[[ quantity ]]' | json }},
      onSale: {{ 'products.product.on_sale' | t | json }},
      soldOut: {{ 'products.product.sold_out' | t | json }},
      in_stock: {{ 'products.labels.in_stock' | t | json }},
      low_stock: {{ 'products.labels.low_stock' | t | json }},
      only_x_left: {{ 'products.labels.only_x_left' | t: quantity: '[[ quantity ]]' | json }},
      single_unit_available: {{ 'products.labels.single_unit_available' | t | json }},
      x_units_available: {{ 'products.labels.x_units_available' | t: quantity: '[[ quantity ]]' | json }},
      unitPriceSeparator: {{ 'products.product.unit_price_separator' | t | json }},
      close: {{ 'general.accessibility_labels.close' | t | json }},
      cart_shipping_calculator_hide_calculator: {{ 'cart.shipping_calculator.hide_calculator' | t | json }},
      cart_shipping_calculator_title: {{ 'cart.shipping_calculator.title' | t | json }},
      cart_general_hide_note: {{ 'cart.general.hide_note' | t | json }},
      cart_general_show_note: {{ 'cart.general.show_note' | t | json }},
      previous: {{'general.accessibility_labels.previous' | t | json }},
      next: {{'general.accessibility_labels.next' | t | json }}
    };
    theme.routes = {
      account_login_url: '{{ routes.account_login_url }}',
      account_register_url: '{{ routes.account_register_url }}',
      account_addresses_url: '{{ routes.account_addresses_url }}',
      search_url: '{{ routes.search_url }}',
      cart_url: '{{ routes.cart_url }}',
      cart_add_url: '{{ routes.cart_add_url }}',
      cart_change_url: '{{ routes.cart_change_url }}',
      product_recommendations_url: '{{ routes.product_recommendations_url }}'
    };
    theme.settings = {
      dynamicQtyOpts: {{ settings.hide_unavailable_quantity_opts | json }},
      saleLabelEnabled: {{ settings.sale_label_enabled | json }},
      soldLabelEnabled: {{ settings.sold_label_enabled | json }}
    };
  </script>

  {%- if template.directory == 'customers' -%}
    <script defer src="{{ 'shopify_common.js' | shopify_asset_url }}"></script>
  {%- endif -%}

  {%- if settings.swatch_enabled_productpage and settings.swatch_value_list != blank -%}
    <style>
      {%- assign swatch_lines = settings.swatch_value_list | newline_to_br | strip_newlines | split: '<br />' -%}
      {%- for line in swatch_lines -%}
        {%- assign line_split = line | split: ':' -%}
        {%- if line_split.last contains '#' -%}
          [data-swatch="{{ line_split.first | downcase | replace: '"', ''}}"] { --swatch-background-color: {{- line_split.last -}} }
        {%- else -%}
          [data-swatch="{{ line_split.first | downcase | replace: '"', ''}}"] { --swatch-background-image: url({{- line_split.last | strip | file_img_url: '128x128', crop: settings.swatch_crop_align -}}) }
        {%- endif -%}
      {%- endfor -%}
    </style>
  {%- endif -%}

  {{ content_for_header }}

  


  {% if content_for_header contains 'rio.pwztag.com' %}{% render 'productwiz-rio', product: product, shop: shop, installGuard: true %}{% endif %}


  {% render 'judgeme_core' %}

<script type="text/javascript">
    (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
    })(window, document, "clarity", "script", "fr5kpmzut9");
</script>
  
<!--Gem_Page_Header_Script-->
{% render 'gem-app-header-scripts' %}
<!--End_Gem_Page_Header_Script-->
  
  <style>
    [data-label=Accordion] [data-control] .wrapp-icon {
      min-width: auto;
      box-shadow: 0 0 0 #000;
    }
  </style>
</head>

<body>
<div class="gem-container">
	{{ content_for_layout }}
</div><!-- end .gem-container -->
<!--Gem_Page_Footer_Script-->
{% render 'gem-app-footer-scripts', GEM_FOOTER_SCRIPT: GEM_FOOTER_SCRIPT %}
<!--End_Gem_Page_Footer_Script-->
</body>
</html>
